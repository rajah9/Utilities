import logging
from collections import defaultdict
from StringUtil import LineAccmulator
from DateUtil import DateUtil

logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', level=logging.DEBUG)
logger = logging.getLogger(__name__)


class EmitterUtil:
    """
    Base class for a Python emitter.
    This is paired with ParserUtil and CompilerUtil.
    """
    def __init__(self, **kw):
        self._program = LineAccmulator()
        self._du = DateUtil()
        self._dataframes = set()

    def emit(self):
        self._program.add_lines(self.preamble())
        logger.debug(f'Python program to be emitted:\n\n{self._program.contents}')

    def preamble(self):
        today = self._du.now(tz_str='US/Eastern')
        year = self._du.asFormattedStr(myDate=today, myFormat="%Y")
        ans = [
            '"""',
            'Generated by SasParser.py',
            f'Copyright {year}, Wells Fargo',
            '"""',
        ]
        return ans

    def emit_imports(self):
        pass

    def emit_body(self):
        pass

    def emit_close(self):
        pass

class PandasEmitterUtil(EmitterUtil):
    def __init__(self, **kw):
        pass
